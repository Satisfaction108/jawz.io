/* ========================================
   JAWZ.IO - SERVER-SIDE GAME STYLES
   All game-related rendering, effects, and HUD
   ======================================== */

/* CSS Variables used by game styles (inherited from client but defined here for clarity) */
:root {
  /* UI elements */
  --border: rgba(255,255,255,0.16);
  --shadow: 0 12px 40px rgba(0,0,0,0.35);

  /* Primary colors */
  --primary: #00d4ff;
  --neon-cyan: #00ffff;
  --neon-blue: #0080ff;
  --neon-purple: #a78bfa;

  /* Text colors */
  --fg: #e8f6ff;
  --muted: #9bc7e6;

  /* Transitions */
  --transition-slow: 350ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Prevent zoom on all game elements */
.game, .game * {
  touch-action: pan-x pan-y;
  user-select: none;
  -webkit-user-select: none;
}

/* Prevent zoom/scale on game container */
.game {
  transform-origin: center center;
  zoom: 1;
  -moz-transform: scale(1);
  -webkit-transform: scale(1);
  transform: scale(1);
}

/* Bubbles layer */
#bubble-layer { position: fixed; inset: 0; pointer-events: none; z-index: 2; display: none; }
/* Use PNG image for bubbles instead of CSS gradients - OPTIMIZED */
.bubble { position: absolute; display: block; object-fit: contain; image-rendering: crisp-edges; image-rendering: pixelated; will-change: transform, opacity; filter: drop-shadow(0 1px 3px rgba(0,0,0,.18)); animation: bubble 14s linear infinite; }
@keyframes bubble {
  0%   { transform: translate3d(0, 100vh, 0); opacity: 0; }
  12%  { opacity: .9; }
  50%  { transform: translate3d(-12px, 20vh, 0); opacity: .96; }
  75%  { transform: translate3d(10px, -2vh, 0); opacity: .9; }
  100% { transform: translate3d(0, -12vh, 0); opacity: 0; }
}
@keyframes sway { 0%,100%{ transform: translateX(0) } 33%{ transform: translateX(-14px) } 66%{ transform: translateX(12px) } }

/* Game */
.hidden {
  display: none !important;
}

.game {
  position: absolute;
  inset: 0;
  padding-top: 64px;
  background: linear-gradient(180deg, #062133, #052134 60%, #041a2a);
  opacity: 0;
  transition: opacity var(--transition-slow);
}

.game:not(.hidden) {
  opacity: 1;
  animation: gameEnter 0.5s cubic-bezier(0.16, 1, 0.3, 1) forwards;
}

@keyframes gameEnter {
  from {
    opacity: 0;
    filter: blur(4px);
  }
  to {
    opacity: 1;
    filter: blur(0);
  }
}

/* Futuristic grid overlay with subtle scan lines - optimized */
.game::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 1;
  opacity: .12;
  mix-blend-mode: screen;
  background-image:
    repeating-linear-gradient(0deg, transparent 0 2px, rgba(0,255,255,.08) 2px 3px),
    repeating-linear-gradient(90deg, transparent 0 2px, rgba(0,255,255,.08) 2px 3px),
    repeating-linear-gradient(112deg, rgba(255,255,255,.15) 0 2px, rgba(255,255,255,0) 2px 24px),
    radial-gradient(120% 80% at 50% -10%, rgba(0,255,255,.12), rgba(255,255,255,0) 60%);
  background-size: 50px 50px, 50px 50px, 100% 100%, 100% 100%;
  /* Removed animation for better performance */
}

.world {
  position: absolute;
  left: 0;
  top: 0;
  width: 4000px;
  height: 4000px;
  transform-origin: 0 0; /* ensure camera translate/scale math uses top-left origin */
  transform: none;
  transform-origin: 0 0;
  /* Futuristic darker ocean background with cyan tint */
  background: linear-gradient(180deg, rgba(20,90,120,.38), rgba(15,75,110,.36) 38%, rgba(8,50,90,.32) 72%, rgba(3,25,50,.30));
  will-change: transform;
  overflow: hidden;
  /* Futuristic neon border with corner accents */
  outline: 2px solid rgba(0,255,255,0.35);
  outline-offset: -2px;
  /* Enhanced glow for futuristic feel */
  box-shadow:
    inset 0 0 40px rgba(0,255,255,0.08),
    inset 0 0 80px rgba(0,180,255,0.04),
    0 0 30px rgba(0,255,255,0.15);
}
.shark {
  position: absolute;
  width: 171px;  /* 2/3 of 256px */
  height: 171px; /* 2/3 of 256px */
  transform-origin: 0 0; /* top-left origin so translate(x,y) is top-left regardless of scale */
  will-change: transform;
  /* OPTIMIZED: Single drop-shadow for better performance */
  filter: drop-shadow(0 3px 8px rgba(0,0,0,.5));
  /* No z-index - all sharks render at same layer, no overlap */
}
.shark__img {
  position: absolute;
  inset: 0;
  /* Background image set dynamically by client based on shark evolution */
  background-size: cover;
  image-rendering: crisp-edges;
  transition: transform 140ms cubic-bezier(.2,.8,.2,1);
  will-change: transform;
  /* OPTIMIZED: Single drop-shadow for better performance */
  filter: drop-shadow(0 0 8px rgba(90,220,255,.35));
}

/* Subtle cyan glow layer under the shark (GPU-accelerated) - OPTIMIZED */
.shark__glow {
  position: absolute;
  inset: 0;
  /* background-image set dynamically to match current shark */
  background-size: cover;
  image-rendering: crisp-edges;
  pointer-events: none;
  will-change: transform;
  /* OPTIMIZED: Single lighter drop-shadow */
  filter: drop-shadow(0 0 6px rgba(0,210,255,.3));
  opacity: .7;
}

/* Bubble Shield visual effect */
.shark__shield {
  position: absolute;
  inset: -20%;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(0,255,255,0.15) 0%, rgba(0,200,255,0.08) 50%, transparent 70%);
  border: 3px solid rgba(0,255,255,0.6);
  box-shadow:
    0 0 20px rgba(0,255,255,0.6),
    0 0 40px rgba(0,255,255,0.3),
    inset 0 0 30px rgba(0,255,255,0.2);
  pointer-events: none;
  z-index: 2;
  animation: shield-pulse 1.5s ease-in-out infinite;
}

/* Shield pop effect - expanding cyan ring burst */
.shield-pop-burst {
  position: absolute;
  pointer-events: none;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(0,255,255,0.4) 0%, rgba(0,200,255,0.2) 40%, transparent 70%);
  border: 3px solid rgba(0,255,255,0.8);
  box-shadow:
    0 0 30px rgba(0,255,255,0.8),
    0 0 50px rgba(0,255,255,0.5),
    inset 0 0 20px rgba(0,255,255,0.4);
  animation: shieldPopBurst 0.4s ease-out forwards;
  z-index: 100;
}

@keyframes shieldPopBurst {
  0% {
    transform: scale(0.8);
    opacity: 1;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

/* Shield pop particles - radial cyan particles */
.shield-pop-particle {
  position: absolute;
  pointer-events: none;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(0,255,255,0.9) 0%, rgba(0,200,255,0.6) 50%, transparent 100%);
  box-shadow:
    0 0 12px rgba(0,255,255,0.8),
    0 0 20px rgba(0,255,255,0.4);
  animation: shieldPopParticle 0.5s ease-out forwards;
  z-index: 99;
}

@keyframes shieldPopParticle {
  0% {
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(var(--tx), var(--ty)) scale(0.3);
    opacity: 0;
  }
}

@keyframes shield-pulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.8;
    border-color: rgba(0,255,255,0.6);
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
    border-color: rgba(0,255,255,0.9);
  }
}
.shark__name {

  position: absolute;
  left: 50%;
  top: -19px; /* 2/3 of -28px */
  transform: translateX(-50%);
  font-weight: 700;
  font-size: 16px; /* 2/3 of 24px */
  padding: 5px 11px; /* 2/3 of 8px 16px */
  border-radius: 999px;
  background: rgba(0,0,0,.55);
  border: 1px solid rgba(255,255,255,.25);
  text-shadow: 0 1px 2px rgba(0,0,0,.8);
  text-align: center;
  white-space: nowrap;
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;
}


/* Projectiles - futuristic optimized */
.projectiles { position: absolute; inset: 0; pointer-events: none; z-index: 3; }
.projectile {
  position: absolute;
  width: 23px;  /* 2/3 of 34px */
  height: 21px; /* 2/3 of 32px */
  background-image: url('/props/bubblebullet.png');
  background-size: contain;
  background-repeat: no-repeat;
  image-rendering: auto;
  will-change: transform, opacity;
  transition: transform 50ms linear, opacity .22s ease;
  opacity: 1;
  /* Reduced glow for better performance - removed animation */
  filter:
    drop-shadow(0 1px 4px rgba(0,0,0,.4))
    drop-shadow(0 0 8px rgba(0,255,255,0.5));
}
.projectile.out { opacity: 0; }

/* Shark HP bar */
.shark__hp { position: absolute; left: 50%; top: 173px; /* 2/3 of 260px */ transform: translateX(-50%); width: 100px; /* 2/3 of 150px */ height: 8px; /* 2/3 of 12px */ }
.shark__hpTrack { width: 100%; height: 7px; /* 2/3 of 10px */ background: rgba(0,0,0,0.35); border: 1px solid rgba(255,255,255,0.16); border-radius: 999px; overflow: hidden; box-shadow: inset 0 1px 2px rgba(255,255,255,0.06), 0 2px 8px rgba(0,0,0,.25); }
.shark__hpFill { height: 100%; width: 100%; background: linear-gradient(90deg, #2aff88, #ffd24a); box-shadow: inset 0 0 5px rgba(255,255,255,0.18); /* 2/3 of 8px */ transition: width .15s ease; }

/* Death overlay */
.death-overlay { position: absolute; inset: 0; display: grid; place-items: center; background: rgba(0,0,0,.45); backdrop-filter: blur(6px); z-index: 50; animation: fadeIn .12s ease; }
.death-overlay.hidden { display: none; }
.death-dialog { width: min(92vw, 420px); background: linear-gradient(180deg, rgba(8,24,38,.96), rgba(6,20,32,.96)); border: 1px solid var(--border); border-radius: 16px; padding: 20px; box-shadow: var(--shadow); text-align: center; animation: pop .18s ease; }
.death-dialog h2 { margin: 0 6px 10px; font-size: 28px; }
.death-dialog .muted { margin: 6px 0 14px; }
.death-stats { display: grid; gap: 8px; margin: 8px 0 8px; }
.death-stats .stat { display: grid; grid-template-columns: 1fr auto; gap: 10px; background: rgba(255,255,255,0.06); border: 1px solid var(--border); border-radius: 10px; padding: 8px 10px; }
.death-stats .label { color: var(--muted); font-weight: 700; letter-spacing: .06em; }
.death-stats .value { font-weight: 800; color: #dff2ff; }

/* Death animation - futuristic glitch effects */
.shark.shark--dead {
  animation: sharkDeath 1.2s ease-out forwards, glitchDeath 1.2s steps(4) forwards;
  pointer-events: none;
}
.shark.shark--dead .shark__img {
  filter: grayscale(1) brightness(.7) hue-rotate(180deg);
  opacity: .35;
  animation: sharkDeathSpin 1.2s ease-out forwards, digitalDissolve 1.2s ease-out forwards;
}
.shark.shark--dead .shark__glow {
  animation: sharkDeathGlow 1.2s ease-out forwards;
}

@keyframes sharkDeath {
  0% {
    transform: translate3d(var(--death-x, 0), var(--death-y, 0), 0) scale(1);
    opacity: 1;
  }
  40% {
    transform: translate3d(var(--death-x, 0), calc(var(--death-y, 0) - 30px), 0) scale(1.15);
    opacity: 0.9;
  }
  100% {
    transform: translate3d(var(--death-x, 0), calc(var(--death-y, 0) + 80px), 0) scale(0.6);
    opacity: 0;
  }
}

@keyframes sharkDeathSpin {
  0% {
    transform: rotate(var(--death-angle, 0)) scaleY(var(--death-flip, 1)) scale(1);
  }
  100% {
    transform: rotate(calc(var(--death-angle, 0) + 720deg)) scaleY(var(--death-flip, 1)) scale(0.8);
  }
}

@keyframes sharkDeathGlow {
  0% {
    opacity: 0.9;
    filter: drop-shadow(0 0 9px rgba(0,255,255,.45)) drop-shadow(0 0 19px rgba(0,200,255,.25));
  }
  30% {
    opacity: 1;
    filter: drop-shadow(0 0 30px rgba(255,0,255,.8)) drop-shadow(0 0 45px rgba(255,0,200,.6));
  }
  60% {
    opacity: 0.8;
    filter: drop-shadow(0 0 27px rgba(255,100,100,.8)) drop-shadow(0 0 40px rgba(255,50,50,.6));
  }
  100% {
    opacity: 0;
    filter: drop-shadow(0 0 40px rgba(0,255,255,.4)) drop-shadow(0 0 53px rgba(0,200,255,.2));
  }
}

/* Digital glitch effect on death */
@keyframes glitchDeath {
  0%, 100% { transform: translate(0, 0); }
  20% { transform: translate(-3px, 2px); }
  40% { transform: translate(2px, -2px); }
  60% { transform: translate(-2px, -1px); }
  80% { transform: translate(1px, 2px); }
}

/* Digital dissolve effect */
@keyframes digitalDissolve {
  0% { opacity: 0.35; }
  25% { opacity: 0.5; }
  50% { opacity: 0.25; }
  75% { opacity: 0.4; }
  100% { opacity: 0; }
}

/* Death particle effect - Enhanced with color transitions (cyan → red → fade) */
.death-particle {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  z-index: 5;
  animation: deathParticle 1s ease-out forwards;
  will-change: transform, opacity;
}

@keyframes deathParticle {
  0% {
    background: radial-gradient(circle, rgba(0, 255, 255, 0.95), rgba(0, 220, 255, 0.7));
    box-shadow: 0 0 8px rgba(0, 255, 255, 0.8), 0 0 12px rgba(0, 220, 255, 0.5);
    transform: translate(0, 0) scale(1);
    opacity: 1;
  }
  30% {
    background: radial-gradient(circle, rgba(100, 200, 255, 0.9), rgba(0, 180, 255, 0.6));
    box-shadow: 0 0 6px rgba(100, 200, 255, 0.7), 0 0 10px rgba(0, 180, 255, 0.4);
    transform: translate(calc(var(--px) * 0.4), calc(var(--py) * 0.4)) scale(1.1);
    opacity: 0.95;
  }
  60% {
    background: radial-gradient(circle, rgba(255, 100, 150, 0.85), rgba(255, 50, 100, 0.5));
    box-shadow: 0 0 5px rgba(255, 100, 150, 0.6), 0 0 8px rgba(255, 50, 100, 0.3);
    transform: translate(calc(var(--px) * 0.75), calc(var(--py) * 0.75)) scale(0.7);
    opacity: 0.7;
  }
  100% {
    background: radial-gradient(circle, rgba(255, 0, 50, 0.6), rgba(200, 0, 50, 0.3));
    box-shadow: 0 0 3px rgba(255, 0, 50, 0.4);
    transform: translate(var(--px), var(--py)) scale(0.3);
    opacity: 0;
  }
}

/* Death debris particles - darker, more solid */
.death-debris {
  position: absolute;
  border-radius: 30%;
  pointer-events: none;
  z-index: 5;
  background: radial-gradient(circle, rgba(80, 80, 100, 0.9), rgba(50, 50, 70, 0.7));
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);
  animation: deathDebris 1s ease-out forwards;
  will-change: transform, opacity;
}

@keyframes deathDebris {
  0% {
    transform: translate(0, 0) scale(1) rotate(0deg);
    opacity: 1;
  }
  50% {
    transform: translate(calc(var(--px) * 0.6), calc(var(--py) * 0.6 + var(--gravity, 0) * 0.3)) scale(0.9) rotate(180deg);
    opacity: 0.8;
  }
  100% {
    transform: translate(var(--px), calc(var(--py) + var(--gravity, 0))) scale(0.4) rotate(360deg);
    opacity: 0;
  }
}

/* Death energy burst - expanding rings */
.death-energy-burst {
  position: absolute;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid rgba(0, 255, 255, 0.8);
  background: radial-gradient(circle, rgba(0, 255, 255, 0.3), transparent 70%);
  pointer-events: none;
  z-index: 4;
  animation: energyBurst 0.8s ease-out forwards;
  will-change: transform, opacity;
}

@keyframes energyBurst {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 1;
    border-color: rgba(0, 255, 255, 0.9);
    background: radial-gradient(circle, rgba(0, 255, 255, 0.5), transparent 70%);
  }
  50% {
    transform: translate(calc(-50% + var(--offset-x) * 0.5), calc(-50% + var(--offset-y) * 0.5)) scale(1.5);
    opacity: 0.6;
    border-color: rgba(255, 100, 150, 0.7);
    background: radial-gradient(circle, rgba(255, 100, 150, 0.3), transparent 70%);
  }
  100% {
    transform: translate(calc(-50% + var(--offset-x)), calc(-50% + var(--offset-y))) scale(2.5);
    opacity: 0;
    border-color: rgba(255, 0, 50, 0.3);
    background: radial-gradient(circle, rgba(255, 0, 50, 0.1), transparent 70%);
  }
}


/* HUD */
.hud { position: absolute; inset: 16px; pointer-events: none; z-index: 12; }
.panel {
  pointer-events: auto;
  position: absolute;
  left: 0;
  top: 48px;
  background:
    linear-gradient(135deg, rgba(0,40,60,.75) 0%, rgba(0,20,35,.7) 100%),
    radial-gradient(circle at top left, rgba(0,255,255,0.12) 0%, transparent 60%),
    repeating-linear-gradient(0deg, transparent 0 2px, rgba(0,255,255,.05) 2px 4px);
  border: 1px solid rgba(0,255,255,0.4);
  border-radius: 14px;
  padding: 8px 10px;
  position: relative;
  /* Enhanced glow with cyan tint */
  box-shadow:
    var(--shadow),
    0 0 20px rgba(0,255,255,0.4),
    0 0 40px rgba(0,200,255,0.15),
    inset 0 1px 0 rgba(0,255,255,0.2),
    inset 0 0 30px rgba(0,255,255,0.08);
  width: fit-content;
}
/* Futuristic corner accents */
.panel::before,
.panel::after {
  content: "";
  position: absolute;
  width: 8px;
  height: 8px;
  border: 2px solid rgba(0,255,255,0.6);
  pointer-events: none;
}
.panel::before {
  top: -1px;
  left: -1px;
  border-right: none;
  border-bottom: none;
  border-top-left-radius: 14px;
}
.panel::after {
  bottom: -1px;
  right: -1px;
  border-left: none;
  border-top: none;
  border-bottom-right-radius: 14px;
}
.panel .label {
  color: #00ffff;
  font-size: 12px;
  font-weight: 800;
  letter-spacing: .18em;
  margin-bottom: 6px;
  text-shadow: 0 0 6px rgba(0,255,255,0.6);
}
.panel .row {
  display: flex;
  gap: 16px;
  justify-content: space-between;
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  color: #e3f5ff;
  font-size: 13px;
}
/* Hit flash layer using the same sprite to respect alpha (only colored pixels tint) */
.shark__flash { position: absolute; inset: 0; /* background-image set dynamically */ background-size: cover; image-rendering: crisp-edges; opacity: 0; pointer-events: none; filter: grayscale(1) brightness(1.1) sepia(1) hue-rotate(-20deg) saturate(7); mix-blend-mode: screen; will-change: opacity, transform; }
.shark.shark--hit .shark__flash { opacity: .85; animation: hitFlash 140ms ease-out forwards; }

.minimap {
  pointer-events: auto;
  position: absolute;
  left: 0;
  bottom: 0;
  width: 200px;
  height: 200px;
  border-radius: 14px;
  background:
    linear-gradient(135deg, rgba(0,50,70,.85) 0%, rgba(0,35,50,.8) 100%),
    radial-gradient(circle at bottom left, rgba(0,255,255,0.15) 0%, transparent 70%),
    repeating-linear-gradient(0deg, transparent 0 2px, rgba(0,255,255,.05) 2px 4px);
  border: 1px solid rgba(0,255,255,.45);
  box-shadow:
    0 8px 30px rgba(0,0,0,.45),
    0 0 25px rgba(0,255,255,0.4),
    0 0 45px rgba(0,200,255,0.2),
    inset 0 1px 0 rgba(0,255,255,0.25),
    inset 0 0 40px rgba(0,255,255,.12);
  overflow: hidden;
}
/* Futuristic corner accents for minimap */
.minimap::before,
.minimap::after {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  border: 2px solid rgba(0,255,255,0.6);
  pointer-events: none;
  z-index: 10;
}
.minimap::before {
  top: 0;
  right: 0;
  border-left: none;
  border-bottom: none;
  border-top-right-radius: 14px;
}
.minimap::after {
  bottom: 0;
  left: 0;
  border-right: none;
  border-top: none;
  border-bottom-left-radius: 14px;
}

/* Subtle vignette overlay for immersion */
.game::after { content: ""; position: absolute; inset: 0; pointer-events: none; background: radial-gradient(120% 90% at 50% -10%, rgba(0,0,0,0) 40%, rgba(0,0,0,.22) 80%), radial-gradient(100% 80% at 50% 120%, rgba(0,0,0,0) 40%, rgba(0,0,0,.24) 78%); mix-blend-mode: multiply; }

/* Food */
.food {
  position: absolute;
  background-image: url('/food/FishFood.png');
  background-size: contain;
  background-repeat: no-repeat;
  image-rendering: crisp-edges;
  will-change: transform, opacity;
  /* Optimized: lighter drop-shadow */
  filter: drop-shadow(0 2px 6px rgba(0,0,0,.3));
  z-index: 1;
  transition: transform 120ms ease, opacity 120ms ease;
}
.food--eaten { transform: scale(0.6); opacity: 0; }

/* Eat pop effect */
.eat-pop { position: absolute; width: 22px; height: 22px; border-radius: 999px; border: 2px solid rgba(125,227,255,.6); pointer-events: none; mix-blend-mode: screen; transform: translate(-50%, -50%) scale(0.6); opacity: .85; animation: eat-pop 300ms ease-out forwards; z-index: 3; }
@keyframes eat-pop { to { transform: translate(-50%, -50%) scale(1.8); opacity: 0; border-color: rgba(125,227,255,0); } }

/* Stats container - 3-column layout: Level | Center | Score */
.stats-container {
  position: absolute;
  left: 50%;
  top: 8px;
  transform: translateX(-50%);
  display: flex;
  gap: 16px;
  align-items: flex-start;
  z-index: 10;
  pointer-events: auto;
}

/* Center column - holds shark name and abilities vertically */
.center-column {
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: center;
}

/* Current shark chip (compact, sleek, low-cost) */
.shark-chip {
  padding: 8px 12px;
  border-radius: 12px;
  background: linear-gradient(135deg, rgba(8,12,20,.72), rgba(10,14,24,.68));
  border: 1px solid rgba(255,255,255,0.12);
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: 6px;
  min-width: 140px;
  max-width: 200px;
  box-shadow: var(--shadow), 0 0 16px rgba(0, 180, 255, 0.18);
}
.shark-chip__label {
  font-size: 11px;
  font-weight: 800;
  letter-spacing: .08em;
  color: #9ad9ff;
  text-shadow: 0 0 6px rgba(0, 200, 255, 0.5);
}
.shark-chip__value {
  font-weight: 800;
  font-size: 14px;
  color: #dff2ff;
  text-shadow: 0 0 8px rgba(0, 200, 255, 0.35);
}

/* Abilities Container */
.abilities-container {
  display: flex;
  gap: 10px;
  align-items: center;
  justify-content: center;
}

/* Ability Icon */
.ability-icon {
  position: relative;
  width: 56px;
  height: 56px;
  border-radius: 12px;
  background: linear-gradient(135deg, rgba(8,12,20,.85), rgba(10,14,24,.8));
  border: 2px solid rgba(0, 212, 255, 0.3);
  cursor: pointer;
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
  box-shadow:
    0 4px 12px rgba(0,0,0,0.4),
    0 0 16px rgba(0, 180, 255, 0.15),
    inset 0 1px 0 rgba(0, 212, 255, 0.15);
}

.ability-icon:hover {
  border-color: rgba(0, 212, 255, 0.6);
  transform: translateY(-2px) scale(1.05);
  box-shadow:
    0 6px 20px rgba(0,0,0,0.5),
    0 0 24px rgba(0, 212, 255, 0.4),
    inset 0 1px 0 rgba(0, 212, 255, 0.25);
}

.ability-icon__img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  padding: 8px;
  image-rendering: crisp-edges;
  image-rendering: pixelated;
  position: relative;
  z-index: 1;
}

/* Cooldown Overlay */
.ability-icon__cooldown {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 0%;
  background: linear-gradient(180deg, rgba(0,0,0,0.3), rgba(0,0,0,0.7));
  backdrop-filter: blur(2px);
  transition: height 100ms linear;
  z-index: 2;
  pointer-events: none;
}

.ability-icon.on-cooldown {
  opacity: 0.6;
  cursor: not-allowed;
}

.ability-icon.on-cooldown:hover {
  transform: none;
  border-color: rgba(0, 212, 255, 0.3);
}

/* Active State Glow */
.ability-icon.active {
  border-color: rgba(0, 255, 255, 0.9);
  animation: ability-pulse 1.5s ease-in-out infinite;
  box-shadow:
    0 6px 20px rgba(0,0,0,0.5),
    0 0 30px rgba(0, 255, 255, 0.6),
    0 0 50px rgba(0, 255, 255, 0.3),
    inset 0 0 20px rgba(0, 255, 255, 0.2);
}

@keyframes ability-pulse {
  0%, 100% {
    box-shadow:
      0 6px 20px rgba(0,0,0,0.5),
      0 0 30px rgba(0, 255, 255, 0.6),
      0 0 50px rgba(0, 255, 255, 0.3),
      inset 0 0 20px rgba(0, 255, 255, 0.2);
  }
  50% {
    box-shadow:
      0 6px 20px rgba(0,0,0,0.5),
      0 0 40px rgba(0, 255, 255, 0.8),
      0 0 70px rgba(0, 255, 255, 0.5),
      inset 0 0 30px rgba(0, 255, 255, 0.3);
  }
}

/* Tooltip - appears below the icon */
.ability-icon__tooltip {
  position: absolute;
  top: calc(100% + 8px);
  left: 50%;
  transform: translateX(-50%) translateY(-4px);
  background: linear-gradient(135deg, rgba(8,12,20,.95), rgba(10,14,24,.92));
  border: 1px solid rgba(0, 212, 255, 0.4);
  border-radius: 10px;
  padding: 10px 12px;
  min-width: 180px;
  max-width: 220px;
  opacity: 0;
  pointer-events: none;
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 100;
  box-shadow:
    0 8px 24px rgba(0,0,0,0.6),
    0 0 20px rgba(0, 212, 255, 0.2);
}

.ability-icon:hover .ability-icon__tooltip {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
}

.ability-icon__tooltip-name {
  font-size: 13px;
  font-weight: 800;
  color: #00d4ff;
  margin-bottom: 4px;
  text-shadow: 0 0 8px rgba(0, 212, 255, 0.5);
}

.ability-icon__tooltip-desc {


  font-size: 11px;
  color: #9bc7e6;
  line-height: 1.4;
  margin-bottom: 6px;
}

.ability-icon__tooltip-key {
  font-size: 10px;
  font-weight: 700;
  color: #ffd44a;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  padding-top: 6px;
  border-top: 1px solid rgba(255,255,255,0.1);
}

/* Tooltip arrow - points upward since tooltip is below */
.ability-icon__tooltip::after {
  content: "";
  position: absolute;
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%);
  border: 6px solid transparent;
  border-bottom-color: rgba(0, 212, 255, 0.4);
}


/* Level bar (yellow theme) - futuristic optimized */

/* Fix: allow tooltips to overflow the icon bounds */
.abilities-container { position: relative; overflow: visible; }
.ability-icon { overflow: visible; }

.levelbar {
  width: min(280px, 35vw);
  padding: 10px 12px;
  border-radius: 14px;
  background:
    linear-gradient(135deg, rgba(40,35,0,.75) 0%, rgba(30,25,0,.7) 100%),
    radial-gradient(circle at top right, rgba(255,200,0,0.12) 0%, transparent 60%),
    repeating-linear-gradient(0deg, transparent 0 2px, rgba(255,200,0,.05) 2px 4px);
  border: 1px solid rgba(255,200,0,0.4);
  position: relative;
  /* Enhanced glow with yellow tint */
  box-shadow:
    var(--shadow),
    0 0 20px rgba(255,200,0,0.4),
    0 0 40px rgba(255,180,0,0.15),
    inset 0 1px 0 rgba(255,200,0,0.2),
    inset 0 0 30px rgba(255,200,0,0.08);
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  gap: 10px;
}
/* Futuristic corner accents for levelbar */
.levelbar::before,
.levelbar::after {
  content: "";
  position: absolute;
  width: 8px;
  height: 8px;
  border: 2px solid rgba(255,200,0,0.6);
  pointer-events: none;
}
.levelbar::before {
  top: -1px;
  left: -1px;
  border-right: none;
  border-bottom: none;
  border-top-left-radius: 14px;
}
.levelbar::after {
  bottom: -1px;
  right: -1px;
  border-left: none;
  border-top: none;
  border-bottom-right-radius: 14px;
}
.levelbar__label {
  color: #ffd44a;
  font-size: 12px;
  font-weight: 800;
  letter-spacing: .08em;
  text-shadow: 0 0 6px rgba(255,200,0,0.6);
}
.levelbar__track {
  grid-column: 1 / -1;
  height: 12px;
  background: rgba(255,255,255,0.08);
  border: 1px solid rgba(255,200,0,0.2);
  border-radius: 999px;
  overflow: hidden;
  position: relative;
  box-shadow: inset 0 0 8px rgba(255,200,0,0.1);
}
.levelbar__fill {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 0%;
  background: linear-gradient(90deg, #ffe166, #ffb400);
  box-shadow:
    inset 0 0 10px rgba(255,255,255,.25),
    0 0 10px rgba(255, 200, 0, .3);
  transition: width .2s ease-out;
}
.levelbar__value {
  justify-self: end;
  font-weight: 800;
  font-size: 14px;
  color: #fff0bf;
  background: rgba(255,255,255,0.06);
  border: 1px solid rgba(255,200,0,0.3);
  padding: 4px 10px;
  border-radius: 999px;
}

/* Score bar - futuristic optimized */
.scorebar {
  width: min(280px, 35vw);
  padding: 10px 12px;
  border-radius: 14px;
  background:
    linear-gradient(135deg, rgba(0,40,60,.75) 0%, rgba(0,20,35,.7) 100%),
    radial-gradient(circle at top left, rgba(0,255,255,0.12) 0%, transparent 60%),
    repeating-linear-gradient(0deg, transparent 0 2px, rgba(0,255,255,.05) 2px 4px);
  border: 1px solid rgba(0,255,255,0.4);
  position: relative;
  /* Enhanced glow with cyan tint */
  box-shadow:
    var(--shadow),
    0 0 20px rgba(0,255,255,0.4),
    0 0 40px rgba(0,200,255,0.15),
    inset 0 1px 0 rgba(0,255,255,0.2),
    inset 0 0 30px rgba(0,255,255,0.08);
  display: grid;
  grid-template-columns: 1fr auto;
  align-items: center;
  gap: 10px;
}
/* Futuristic corner accents for scorebar */
.scorebar::before,
.scorebar::after {
  content: "";
  position: absolute;
  width: 8px;
  height: 8px;
  border: 2px solid rgba(0,255,255,0.6);
  pointer-events: none;
}
.scorebar::before {
  top: -1px;
  right: -1px;
  border-left: none;
  border-bottom: none;
  border-top-right-radius: 14px;
}
.scorebar::after {
  bottom: -1px;
  left: -1px;
  border-right: none;
  border-top: none;
  border-bottom-left-radius: 14px;
}
.scorebar__label {
  color: #00ffff;
  font-size: 12px;
  font-weight: 800;
  letter-spacing: .08em;
  text-shadow: 0 0 6px rgba(0,255,255,0.6);
}
.scorebar__track {
  grid-column: 1 / -1;
  height: 12px;
  background: rgba(255,255,255,0.08);
  border: 1px solid rgba(0,255,255,0.2);
  border-radius: 999px;
  overflow: hidden;
  position: relative;
  box-shadow: inset 0 0 8px rgba(0,255,255,0.1);
}
.scorebar__fill {
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  width: 0%;
  background: linear-gradient(90deg, var(--primary), #1bb1ff);
  box-shadow:
    inset 0 0 10px rgba(255,255,255,.2),
    0 0 10px rgba(0,255,255,.3);
  transition: width .2s ease-out;
}
.scorebar__value {
  justify-self: end;
  font-weight: 800;
  font-size: 14px;
  color: #dff2ff;
  background: rgba(255,255,255,0.06);
  border: 1px solid rgba(0,255,255,0.3);
  padding: 4px 10px;
  border-radius: 999px;
}

/* Performance chip (top-left) - futuristic */
.perf-chip {
  position: absolute;
  left: 0;
  top: 0;
  margin: 8px;
  padding: 6px 10px;
  border-radius: 999px;
  background:
    linear-gradient(135deg, rgba(0,40,60,.8) 0%, rgba(0,25,40,.75) 100%),
    radial-gradient(circle at center, rgba(0,255,255,0.15) 0%, transparent 70%),
    repeating-linear-gradient(90deg, transparent 0 2px, rgba(0,255,255,.05) 2px 4px);
  border: 1px solid rgba(0,255,255,0.4);
  box-shadow:
    var(--shadow),
    0 0 20px rgba(0,255,255,0.4),
    0 0 35px rgba(0,200,255,0.2),
    inset 0 1px 0 rgba(0,255,255,0.2),
    inset 0 0 25px rgba(0,255,255,0.1);
  font-weight: 700;
  font-size: 12px;
  letter-spacing: .02em;
  pointer-events: auto;
}
.perf-chip span {
  color: #00ffff;
  text-shadow: 0 0 6px rgba(0,255,255,0.8);
}

/* Leaderboard (top-right) - futuristic optimized */
.leaderboard {
  position: absolute !important;
  right: 0 !important;
  left: auto !important;
  top: 0;
  width: min(280px, 40vw);
  background:
    linear-gradient(135deg, rgba(0,40,60,.8) 0%, rgba(0,25,40,.75) 100%),
    radial-gradient(circle at top right, rgba(0,255,255,0.15) 0%, transparent 70%),
    repeating-linear-gradient(0deg, transparent 0 2px, rgba(0,255,255,.05) 2px 4px);
  border: 1px solid rgba(0,255,255,0.4);
  border-radius: 14px;
  /* Enhanced glow with cyan tint */
  box-shadow:
    var(--shadow),
    0 0 20px rgba(0,255,255,0.4),
    0 0 40px rgba(0,200,255,0.2),
    inset 0 1px 0 rgba(0,255,255,0.2),
    inset 0 0 40px rgba(0,255,255,0.1);
  overflow: hidden;
  pointer-events: auto;
}
/* Futuristic corner accents for leaderboard */
.leaderboard::after {
  content: "";
  position: absolute;
  top: -1px;
  right: -1px;
  width: 10px;
  height: 10px;
  border: 2px solid rgba(0,255,255,0.6);
  border-left: none;
  border-bottom: none;
  border-top-right-radius: 14px;
  pointer-events: none;
  z-index: 10;
}
.leaderboard::before {
  content: "LEADERBOARD";
  display: block;
  padding: 10px 12px;
  font-size: 12px;
  font-weight: 800;
  letter-spacing: .18em;
  color: #00ffff;
  border-bottom: 1px solid rgba(0,255,255,0.2);
  text-shadow: 0 0 6px rgba(0,255,255,0.6);
  position: relative;
  z-index: 1;
}
.leaderboard__list { list-style: none; margin: 0; padding: 6px; }
.leaderboard__item {
  display: grid;
  grid-template-columns: 24px 1fr auto;
  align-items: center;
  gap: 8px;
  padding: 8px 8px;
  border-radius: 10px;
  transition: transform .25s ease, background .2s ease, opacity .2s ease;
}
.leaderboard__item:hover {
  background: rgba(0,255,255,0.08);
  box-shadow: 0 0 10px rgba(0,255,255,0.2);
}
.leaderboard__rank {
  font-weight: 900;
  color: #ffe46b;
  text-align: center;
}
.leaderboard__name {
  font-weight: 700;
  color: var(--fg);
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.leaderboard__score {
  font-weight: 800;
  color: #00ffff;
  background: rgba(0,255,255,0.08);
  border: 1px solid rgba(0,255,255,0.3);
  padding: 2px 8px;
  border-radius: 999px;
}


/* --- FX: Damage overlays, ripples, impact flash, trail, score popup --- */
.fx-vignette { position: absolute; inset: 0; pointer-events: none; z-index: 6; }
.fx-vignette.active { outline: 0 solid rgba(255,0,0,0); animation: redPulse 240ms ease-out; }
@keyframes redPulse {
  0% { box-shadow: inset 0 0 0 0 rgba(255, 80, 80, .0); }
  30% { box-shadow: inset 0 0 0 12px rgba(255, 80, 80, .20), inset 0 0 80px 30px rgba(255, 40, 40, .25); }
  100% { box-shadow: inset 0 0 0 0 rgba(255, 80, 80, .0); }
}

/* Critical HP tunnel vision + blur (world only) - optimized */
.fx-critical { position: absolute; inset: 0; pointer-events: none; z-index: 5; opacity: 0; transition: opacity .2s ease; }
.fx-critical.active {
  opacity: 1;
  /* Removed expensive backdrop-filter blur for performance */
  background: radial-gradient(120% 90% at 50% -10%, rgba(0,0,0,0) 38%, rgba(180,0,0,.15) 70%), radial-gradient(100% 80% at 50% 120%, rgba(0,0,0,0) 40%, rgba(120,0,0,.18) 78%);
  mix-blend-mode: multiply;
}

/* Ripple when bubbles pop or impact - futuristic optimized */
.ripple {
  position: absolute;
  left: 0;
  top: 0;
  transform: translate(-50%, -50%) scale(.5);
  border: 2px solid rgba(0,255,255,.7);
  border-radius: 999px;
  pointer-events: none;
  mix-blend-mode: screen;
  opacity: .9;
  animation: ripple 420ms ease-out forwards;
  z-index: 4;
  box-shadow: 0 0 10px rgba(0,255,255,0.4);
}
@keyframes ripple {
  to {
    transform: translate(-50%, -50%) scale(1.8);
    opacity: 0;
    border-color: rgba(0,255,255,0);
    box-shadow: 0 0 20px rgba(0,255,255,0);
  }
}

/* Impact flash animation keyframes (reused by flash layer) */
@keyframes hitFlash { from { opacity: .9 } to { opacity: 0 } }

/* Water trail bubbles using provided 16x16 sprite - optimized with size variations */
.trail-bubble {
  position: absolute;
  width: calc(11px * var(--size-mult, 1));  /* 2/3 of 16px with size multiplier */
  height: calc(11px * var(--size-mult, 1)); /* 2/3 of 16px with size multiplier */
  background: url('/props/watertrailbubble.png') center/contain no-repeat;
  image-rendering: crisp-edges;
  opacity: .85;
  will-change: transform, opacity;
  animation: trailRise 900ms ease-out forwards;
  z-index: 1;
}

/* Small trail bubbles */
.trail-bubble--small {
  opacity: .75;
  animation: trailRiseSmall 900ms ease-out forwards;
}

/* Large trail bubbles - OPTIMIZED: removed filter */
.trail-bubble--large {
  opacity: .9;
  animation: trailRiseLarge 900ms ease-out forwards;
}

@keyframes trailRise {
  0% {
    transform: translate3d(var(--x,0), var(--y,0), 0) scale(calc(1 * var(--size-mult, 1)));
    opacity: .95;
  }
  30% {
    transform: translate3d(calc(var(--x,0) + 2px), calc(var(--y,0) - 4px), 0) scale(calc(1.05 * var(--size-mult, 1)));
    opacity: .9;
  }
  70% {
    transform: translate3d(calc(var(--x,0) - 1px), calc(var(--y,0) - 9px), 0) scale(calc(0.95 * var(--size-mult, 1)));
    opacity: .5;
  }
  100% {
    transform: translate3d(var(--x,0), calc(var(--y,0) - 14px), 0) scale(calc(0.85 * var(--size-mult, 1)));
    opacity: 0;
  }
}

@keyframes trailRiseSmall {
  0% {
    transform: translate3d(var(--x,0), var(--y,0), 0) scale(calc(1 * var(--size-mult, 1))) rotate(0deg);
    opacity: .85;
  }
  40% {
    transform: translate3d(calc(var(--x,0) - 2px), calc(var(--y,0) - 6px), 0) scale(calc(0.9 * var(--size-mult, 1))) rotate(90deg);
    opacity: .75;
  }
  100% {
    transform: translate3d(calc(var(--x,0) + 1px), calc(var(--y,0) - 18px), 0) scale(calc(0.65 * var(--size-mult, 1))) rotate(180deg);
    opacity: 0;
  }
}

@keyframes trailRiseLarge {
  0% {
    transform: translate3d(var(--x,0), var(--y,0), 0) scale(calc(1 * var(--size-mult, 1)));
    opacity: .95;
  }
  50% {
    transform: translate3d(calc(var(--x,0) + 3px), calc(var(--y,0) - 5px), 0) scale(calc(1.15 * var(--size-mult, 1)));
    opacity: .9;
  }
  100% {
    transform: translate3d(var(--x,0), calc(var(--y,0) - 10px), 0) scale(calc(0.95 * var(--size-mult, 1)));
    opacity: 0;
  }
}

/* Wake effect for fast movement - OPTIMIZED: Simplified gradient */
.wake-effect {
  position: absolute;
  width: 40px;
  height: 20px;
  pointer-events: none;
  background: radial-gradient(ellipse 100% 50% at 50% 50%,
    rgba(100, 200, 255, 0.25) 0%,
    transparent 60%);
  transform-origin: center;
  transform: translate(-50%, -50%) rotate(var(--angle, 0));
  animation: wakeExpand 600ms ease-out forwards;
  z-index: 0;
}

@keyframes wakeExpand {
  0% {
    opacity: 0.6;
    transform: translate(-50%, -50%) rotate(var(--angle, 0)) scale(0.5);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) rotate(var(--angle, 0)) scale(1.8);
  }
}

/* Score popup above local shark - enhanced with bounce */
.score-popup {
  position: absolute;
  left: 0;
  top: 0;
  transform: translate(-50%, -50%);
  font-weight: 900;
  font-size: 11px; /* 2/3 of 16px */
  color: #00ffff;
  text-shadow:
    0 0 8px rgba(0,255,255,0.6),
    0 1px 5px rgba(0,0,0,.6);
  pointer-events: none;
  animation: scorePopEnhanced 1.2s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  z-index: 6;
}
@keyframes scorePopEnhanced {
  0% {
    transform: translate(-50%, 0) scale(0.5);
    opacity: 0;
    filter: blur(4px);
  }
  20% {
    transform: translate(-50%, -10px) scale(1.2);
    opacity: 1;
    filter: blur(0);
  }
  80% {
    transform: translate(-50%, -40px) scale(1);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -60px) scale(0.8);
    opacity: 0;
    filter: blur(2px);
  }
}
@keyframes scorePopFade {
  0% { opacity: 0; transform: translate(-50%, -50%) scale(.9); }
  15% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
  100% { opacity: 0; transform: translate(-50%, -50%) scale(1.06); }
}


/* Kill feed (left middle, moved to avoid leaderboard interference) - futuristic */
.kill-feed {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: min(280px, 40vw);
  display: grid;
  gap: 6px;
  padding: 6px;
  pointer-events: none;
  z-index: 14;
}
.kill-feed .feed-item {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2px;
  padding: 8px 10px;
  border-radius: 12px;
  background:
    linear-gradient(135deg, rgba(0,40,60,.75) 0%, rgba(0,25,40,.7) 100%),
    radial-gradient(circle at center left, rgba(0,255,255,0.12) 0%, transparent 70%),
    repeating-linear-gradient(90deg, transparent 0 2px, rgba(0,255,255,.05) 2px 4px);
  border: 1px solid rgba(0,255,255,0.4);
  box-shadow:
    var(--shadow),
    0 0 20px rgba(0,255,255,0.4),
    0 0 35px rgba(0,200,255,0.15),
    inset 0 1px 0 rgba(0,255,255,0.2),
    inset 0 0 25px rgba(0,255,255,0.08);
  color: var(--fg);
  font-size: 13px;
  font-weight: 700;
  opacity: .98;
  animation: fadeIn .15s ease;
}
.kill-feed .feed-item .who {
  color: #00ffff;
}
.kill-feed .feed-item .what {
  color: #dff2ff;
}
.kill-feed .feed-item .assist {
  color: #ffe46b;
}

/* Top notification (center, slides in and out) - futuristic */
.top-notify {
  position: absolute;
  left: 50%;
  top: 10px;
  transform: translateX(-50%);
  display: grid;
  gap: 8px;
  z-index: 30;
  pointer-events: none;
}
.top-notify .notice {
  padding: 10px 14px;
  border-radius: 12px;
  background:
    linear-gradient(135deg, rgba(0,45,65,.8) 0%, rgba(0,30,45,.75) 100%),
    radial-gradient(circle at center, rgba(0,255,255,0.15) 0%, transparent 70%),
    repeating-linear-gradient(90deg, transparent 0 2px, rgba(0,255,255,.05) 2px 4px);
  border: 1px solid rgba(0,255,255,0.5);
  box-shadow:
    var(--shadow),
    0 0 25px rgba(0,255,255,0.5),
    0 0 45px rgba(0,200,255,0.25),
    inset 0 1px 0 rgba(0,255,255,0.25),
    inset 0 0 30px rgba(0,255,255,0.1);
  font-weight: 800;
  letter-spacing: .02em;
  color: #00ffff;
  text-shadow: 0 0 8px rgba(0,255,255,0.8);
  transform: translateY(-10px);
  opacity: 0;
  animation: notifyIn .18s ease forwards;
}
@keyframes notifyIn { to { transform: translateY(0); opacity: 1 } }
@keyframes notifyOut { to { transform: translateY(-10px); opacity: 0 } }

/* Center actions in death dialog */
.death-dialog .dialog-actions {
  justify-content: center;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Evolution smoke particle effect (Enhanced with cyan-purple gradient) */
.evolution-smoke {
  position: absolute;
  pointer-events: none;
  border-radius: 50%;
  /* Cyan to purple gradient based on --color-progress */
  background: radial-gradient(circle,
    rgba(255,255,255,0.9) 0%,
    rgba(100, 220, 255, calc(0.7 * (1 - var(--color-progress, 0.5)))) 20%,
    rgba(180, 140, 255, calc(0.6 * var(--color-progress, 0.5))) 40%,
    rgba(200,225,255,0.35) 70%,
    transparent 100%);
  box-shadow:
    0 0 18px rgba(100, 220, 255, calc(0.7 * (1 - var(--color-progress, 0.5)))),
    0 0 30px rgba(180, 140, 255, calc(0.5 * var(--color-progress, 0.5))),
    inset 0 0 12px rgba(255,255,255,0.4);
  filter: blur(1.5px);
  animation: smokeExpand 0.75s ease-out forwards;
  will-change: transform, opacity;
  z-index: 1000;
}

@keyframes smokeExpand {
  0% {
    transform: translate(0, 0) scale(0.35) rotate(0deg);
    opacity: 1;
  }
  50% {
    transform: translate(calc(var(--offset-x) * 0.7), calc(var(--offset-y) * 0.7 - 15px)) scale(1.25) rotate(calc(var(--rotation) * 0.5));
    opacity: 0.85;
  }
  100% {
    transform: translate(var(--offset-x), calc(var(--offset-y) - 34px)) scale(1.6) rotate(var(--rotation));
    opacity: 0;
  }
}

/* Evolution sparkle particles */
.evolution-sparkle {
  position: absolute;
  pointer-events: none;
  border-radius: 50%;
  background: radial-gradient(circle,
    rgba(255, 255, 255, 1) 0%,
    rgba(100, 220, 255, 0.9) 30%,
    rgba(180, 140, 255, 0.7) 60%,
    transparent 100%);
  box-shadow:
    0 0 12px rgba(255, 255, 255, 0.9),
    0 0 20px rgba(100, 220, 255, 0.6),
    0 0 30px rgba(180, 140, 255, 0.4);
  animation: sparkleExpand 0.65s ease-out forwards;
  will-change: transform, opacity;
  z-index: 1001;
}

@keyframes sparkleExpand {
  0% {
    transform: translate(0, 0) scale(0.5) rotate(0deg);
    opacity: 1;
  }
  30% {
    transform: translate(calc(var(--offset-x) * 0.4), calc(var(--offset-y) * 0.4 - 8px)) scale(1.3) rotate(calc(var(--rotation) * 0.3));
    opacity: 1;
  }
  100% {
    transform: translate(var(--offset-x), calc(var(--offset-y) - 28px)) scale(0.3) rotate(var(--rotation));
    opacity: 0;
  }
}

/* Outer ring sparkles */
.evolution-sparkle--outer {
  animation: sparkleExpandOuter 0.7s ease-out forwards;
}

@keyframes sparkleExpandOuter {
  0% {
    transform: translate(0, 0) scale(0.6) rotate(0deg);
    opacity: 0.9;
  }
  40% {
    transform: translate(calc(var(--offset-x) * 0.5), calc(var(--offset-y) * 0.5 - 10px)) scale(1.4) rotate(calc(var(--rotation) * 0.4));
    opacity: 0.95;
  }
  100% {
    transform: translate(var(--offset-x), calc(var(--offset-y) - 35px)) scale(0.2) rotate(var(--rotation));
    opacity: 0;
  }
}

/* Central veil that blankets the shark during evolution to hide the sprite swap */
.evolution-smoke-veil {
  position: absolute;
  pointer-events: none;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(255,255,255,0.95) 0%, rgba(235,235,235,0.7) 45%, rgba(200,225,255,0.35) 70%, transparent 100%);
  box-shadow:
    0 0 24px rgba(255,255,255,0.75),
    0 0 40px rgba(140,210,255,0.5),
    inset 0 0 16px rgba(255,255,255,0.45);
  filter: blur(1px);
  animation: veilExpand 0.55s ease-out forwards;
  will-change: transform, opacity;
  z-index: 1001; /* above smoke particles and shark */
}

@keyframes veilExpand {
  0% { transform: translate(0,0) scale(0.6); opacity: 0.95; }
  50% { transform: translate(0, -10px) scale(1.15); opacity: 0.85; }
  100% { transform: translate(0, -22px) scale(1.35); opacity: 0; }
}

/* ========================================
   HP BAR - Top Center with Status Text
   ======================================== */
.hpbar {
  position: absolute;
  top: 140px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 10px 20px;
  background: rgba(6, 33, 51, 0.85);
  border: 1px solid var(--border);
  border-radius: 12px;
  backdrop-filter: blur(8px);
  box-shadow: var(--shadow);
  z-index: 100;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hpbar__label {
  font-size: 11px;
  font-weight: 600;
  color: var(--muted);
  text-transform: uppercase;
  letter-spacing: 0.8px;
  min-width: 24px;
}

.hpbar__track {
  position: relative;
  width: 280px;
  height: 20px;
  background: rgba(0, 0, 0, 0.4);
  border-radius: 10px;
  overflow: hidden;
  box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.5);
}

.hpbar__fill {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  background: linear-gradient(90deg, #00ff88 0%, #00d4ff 50%, #00ffff 100%);
  border-radius: 10px;
  transition: width 0.4s cubic-bezier(0.4, 0, 0.2, 1), background 0.3s ease;
  box-shadow:
    0 0 12px rgba(0, 255, 136, 0.6),
    inset 0 1px 2px rgba(255, 255, 255, 0.3);
  will-change: width;
}

/* HP states with different colors */
.hpbar__fill.healthy {
  background: linear-gradient(90deg, #00b8d4 0%, #0097a7 50%, #4db8b8 100%);
  box-shadow: 0 0 12px rgba(0, 184, 212, 0.6), inset 0 1px 2px rgba(255, 255, 255, 0.3);
}

.hpbar__fill.injured {
  background: linear-gradient(90deg, #3b6e7f 0%, #2c4f5f 50%, #1e3a44 100%);
  box-shadow: 0 0 12px rgba(59, 110, 127, 0.6), inset 0 1px 2px rgba(255, 255, 255, 0.3);
}

.hpbar__fill.critical {
  background: linear-gradient(90deg, #d17f7f 0%, #ff4d4d 50%, #ff1a1a 100%);
  box-shadow: 0 0 16px rgba(209, 127, 127, 0.8), inset 0 1px 2px rgba(255, 255, 255, 0.3);
  animation: hpPulse 0.8s ease-in-out infinite;
}

@keyframes hpPulse {
  0%, 100% { opacity: 1; box-shadow: 0 0 16px rgba(255, 68, 68, 0.8), inset 0 1px 2px rgba(255, 255, 255, 0.3); }
  50% { opacity: 0.85; box-shadow: 0 0 24px rgba(255, 68, 68, 1), inset 0 1px 2px rgba(255, 255, 255, 0.3); }
}

.hpbar__status {
  font-size: 12px;
  font-weight: 700;
  color: var(--fg);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  min-width: 70px;
  text-align: center;
  text-shadow: 0 0 8px rgba(0, 255, 255, 0.6);
  transition: color 0.3s ease, text-shadow 0.3s ease;
}

.hpbar__status.healthy {
  color: #00ff88;
  text-shadow: 0 0 8px rgba(0, 255, 136, 0.8);
}

.hpbar__status.injured {
  color: #ffaa00;
  text-shadow: 0 0 8px rgba(255, 170, 0, 0.8);
}

.hpbar__status.critical {
  color: #ff4444;
  text-shadow: 0 0 12px rgba(255, 68, 68, 1);
  animation: statusPulse 0.8s ease-in-out infinite;
}

@keyframes statusPulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}

.hpbar__value {
  font-size: 13px;
  font-weight: 700;
  color: var(--fg);
  min-width: 48px;
  text-align: right;
  font-variant-numeric: tabular-nums;
}

/* ========================================
   PARTICLE EFFECTS SYSTEM
   ======================================== */
.fx-particles {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 3;
  overflow: hidden;
}

.particle {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  will-change: transform, opacity;
}

/* Ambient ocean particles */
.particle-ambient {
  background: radial-gradient(circle, rgba(0, 255, 255, 0.4) 0%, rgba(0, 212, 255, 0.2) 50%, transparent 100%);
  animation: floatAmbient 8s ease-in-out infinite;
}

@keyframes floatAmbient {
  0%, 100% { transform: translate3d(0, 0, 0) scale(1); opacity: 0.3; }
  25% { transform: translate3d(20px, -30px, 0) scale(1.1); opacity: 0.6; }
  50% { transform: translate3d(-15px, -60px, 0) scale(0.9); opacity: 0.4; }
  75% { transform: translate3d(25px, -90px, 0) scale(1.05); opacity: 0.5; }
}

/* Evolution burst particles */
.particle-evolution {
  background: radial-gradient(circle, rgba(255, 215, 0, 0.9) 0%, rgba(0, 255, 255, 0.6) 50%, transparent 100%);
  box-shadow: 0 0 8px rgba(255, 215, 0, 0.8);
  animation: evolutionBurst 1.2s ease-out forwards;
}

@keyframes evolutionBurst {
  0% { transform: translate3d(0, 0, 0) scale(0.5); opacity: 1; }
  100% { transform: translate3d(var(--tx), var(--ty), 0) scale(0); opacity: 0; }
}

/* Sparkle particles */
.particle-sparkle {
  background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(0, 255, 255, 0.8) 40%, transparent 100%);
  box-shadow: 0 0 6px rgba(255, 255, 255, 0.9);
  animation: sparkle 0.8s ease-out forwards;
}

@keyframes sparkle {
  0% { transform: translate3d(0, 0, 0) scale(0) rotate(0deg); opacity: 1; }
  50% { transform: translate3d(var(--tx), var(--ty), 0) scale(1.2) rotate(180deg); opacity: 0.8; }
  100% { transform: translate3d(calc(var(--tx) * 1.5), calc(var(--ty) * 1.5), 0) scale(0) rotate(360deg); opacity: 0; }
}

/* Hit impact particles */
.particle-impact {
  background: radial-gradient(circle, rgba(255, 100, 100, 0.9) 0%, rgba(255, 50, 50, 0.5) 50%, transparent 100%);
  animation: impactBurst 0.6s ease-out forwards;
}

@keyframes impactBurst {
  0% { transform: translate3d(0, 0, 0) scale(1); opacity: 1; }
  100% { transform: translate3d(var(--tx), var(--ty), 0) scale(0.3); opacity: 0; }
}

/* ========================================
   CHROMATIC ABERRATION (Low HP Effect) - OPTIMIZED: Simplified
   ======================================== */
.fx-chromatic {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 7;
  opacity: 0;
  transition: opacity 0.3s ease;
  mix-blend-mode: screen;
}

.fx-chromatic.active {
  opacity: 0.6; /* OPTIMIZED: Reduced from 1 */
  /* OPTIMIZED: Removed animation for better performance */
  background: radial-gradient(circle at 50% 50%, rgba(255, 0, 0, 0.06) 0%, transparent 60%);
}

/* OPTIMIZED: Removed chromaticPulse animation */

/* ========================================
   EVOLUTION SCREEN FLASH
   ======================================== */
.evolution-flash {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 8;
  background: radial-gradient(circle, rgba(255, 215, 0, 0.4) 0%, rgba(0, 255, 255, 0.2) 50%, transparent 100%);
  animation: evolutionFlash 0.8s ease-out forwards;
}

@keyframes evolutionFlash {
  0% { opacity: 0; transform: scale(0.8); }
  30% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(1.2); }
}

/* ========================================
   GLOW EFFECTS FOR SHARKS AND ABILITIES
   ======================================== */
.shark-glow {
  position: absolute;
  pointer-events: none;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(0, 255, 255, 0.3) 0%, transparent 70%);
  filter: blur(20px);
  animation: sharkGlow 2s ease-in-out infinite;
  will-change: transform, opacity;
}

@keyframes sharkGlow {
  0%, 100% { transform: scale(1); opacity: 0.4; }
  50% { transform: scale(1.2); opacity: 0.7; }
}

/* Enhanced ability icon glow when active */
.ability-icon.active .ability-icon__img {
  filter: drop-shadow(0 0 12px rgba(0, 255, 255, 0.8)) drop-shadow(0 0 24px rgba(0, 212, 255, 0.6));
  animation: abilityGlow 1s ease-in-out infinite;
}

@keyframes abilityGlow {
  0%, 100% { filter: drop-shadow(0 0 12px rgba(0, 255, 255, 0.8)) drop-shadow(0 0 24px rgba(0, 212, 255, 0.6)); }
  50% { filter: drop-shadow(0 0 16px rgba(0, 255, 255, 1)) drop-shadow(0 0 32px rgba(0, 212, 255, 0.8)); }
}

/* ========================================
   LIGHT RAYS (Ambient Ocean Effect)
   ======================================== */
.light-ray {
  position: absolute;
  top: -10%;
  width: 2px;
  height: 120%;
  background: linear-gradient(180deg,
    transparent 0%,
    rgba(0, 255, 255, 0.15) 20%,
    rgba(0, 212, 255, 0.1) 50%,
    rgba(0, 255, 255, 0.05) 80%,
    transparent 100%);
  pointer-events: none;
  opacity: 0.6;
  animation: lightRayMove 15s linear infinite;
  will-change: transform, opacity;
  filter: blur(1px);
}

@keyframes lightRayMove {
  0% { transform: translateX(0) scaleY(1); opacity: 0.3; }
  50% { transform: translateX(30px) scaleY(1.1); opacity: 0.6; }
  100% { transform: translateX(0) scaleY(1); opacity: 0.3; }
}

